services:
  rpg_database:
    platform: linux/x86_64
    image: mysql
    container_name: rpg_database
    ports:
      - "10003:3306"
    volumes:
      - rpg_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: RpgDB
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      MYSQL_ROOT_PASSWORD: rootUser
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-prootUser"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s 
    networks:
      - rpg_net

  rpg_api:
    container_name: rpg_api
    build:
      context: RPG-Service
      dockerfile: RPG-API/Dockerfile
    ports:
      - "10001:80"
      - "10002:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      rpg_database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    links:
      - rpg_database
      - rabbitmq
    networks:
      - rpg_net
      - message_net

  survey_database:
    platform: linux/x86_64
    image: mysql
    container_name: survey_database
    ports:
      - "10006:3306"
    volumes:
      - survey_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: SurveyDB
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      MYSQL_ROOT_PASSWORD: rootUser
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-prootUser"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s 
    networks:
      - survey_net

  survey_api:
    container_name: survey_api
    build:
      context: Survey-Service
      dockerfile: Survey-API/Dockerfile
    ports:
      - "10004:80"
      - "10005:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80    
    depends_on:
      survey_database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    links:
      - survey_database
      - rabbitmq
    networks:
      - survey_net
      - message_net

  gateway:
    container_name: gateway
    build:
      context: Gateway
      dockerfile: Gateway/Dockerfile
    ports:
      - "10007:80"
      - "10008:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      rpg_api:
        condition: service_healthy
      survey_api:
        condition: service_healthy
      redis:
        condition: service_healthy
    links:
      - rpg_api
      - survey_api
      - redis
    networks:
      - rpg_net
      - survey_net
      - chache_net

  rabbitmq:
    image: masstransit/rabbitmq
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s     
    networks:
      - message_net

  redis:
    image: redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s     
    networks:
      - chache_net

networks:
  rpg_net:
    name: rpg_net
  survey_net:
    name: survey_net
  message_net:
    name: message_net
  chache_net:
    name: chache_net

volumes:
  rpg_data:
  survey_data:
  rabbit_data:
  redis_data: